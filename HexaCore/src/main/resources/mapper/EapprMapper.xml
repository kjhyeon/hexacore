<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hexa.core.web.eappr.sqls">


	<!-- 문서 수정을 위한 해당 문서 조회 -->
	<select id="selectDoc" parameterType="java.lang.String" resultType="DocumentDto">
	SELECT	SEQ, 		AUTHOR, 	TITLE,		STATE,
		 	APPR_TURN, 	TYPE_SEQ, 	CONTENT,	REGDATE 
		FROM DOCUMENT
			WHERE SEQ = #{seq}
	</select>
	
	<!-- 문서 수정된 사항 UPDATE -->
	<update id="updateDoc" parameterType="DocumentDto">
	UPDATE DOCUMENT
		SET STATE=#{state}, APPR_TURN=#{appr_turn}, REGDATE=SYSDATE
			<if test="content !=null and title!=null">
				,CONTENT=#{content}, TITLE=#{title}
			</if>
		WHERE SEQ=#{seq}
	</update>
	
	<!-- 해당문서 결재루트 체크 -->
	<select id="selectApprRoot" parameterType="ApprovalDto" resultType="ApprovalDto">
	SELECT	ID,		CHK,	TURN,	NAME,
			DUTY, 	APPR_DATE,	APPR_KIND,	APPR_SIGN, SEQ
		FROM APPROVAL 
			WHERE SEQ = #{seq}
			<if test="id!=null">
				AND ID=#{id}
			</if>
	</select>
	
	<!-- 결재 루트 삭제 -->
	<delete id="deleteApprRoot" parameterType="java.lang.String">
	DELETE FROM APPROVAL
		WHERE SEQ = #{seq}
	</delete>
	
	<!-- 결재루트 입력 -->
	<insert id="insertApprRoot" parameterType="ApprovalDto">
	INSERT INTO APPROVAL(
						SEQ,	ID,		NAME,	DUTY,
						CHK,	TURN,	APPR_KIND)
				  VALUES(
				  		#{seq},	#{id},	#{name},	#{duty},
				  		'F',	#{turn},#{appr_kind})
	</insert>
	
	<!-- 파일 업로드 DB에 첨부파일 저장 하는 쿼리 작성 및 테스트 -->
	<insert id="insertFile" parameterType="DocFileDto">
		INSERT INTO DocFileDTO
					(NAME,	SEQ,	F_PATH,		ORI_NAME,	F_SIZE)
			VALUES(#{name}, #{seq}, #{f_path}, #{ori_name}, #{f_size})
		
	</insert>
	
	<!-- 업로드한 파일 삭제	DB에 저장되어있는 첨부파일 영구 삭제 하는 쿼리 작성 및 테스트 -->
	<delete id="deleteFile" parameterType="java.lang.String">
	DELETE FROM DocFileDTO
		WHERE SEQ= #{seq}
	</delete>
	
	<!-- 문서 결재시 결재선 업데이트 CHK T 반려시 R 업데이트-->
	<update id="updateApprChk" parameterType="ApprovalDto">
	UPDATE APPROVAL
		SET CHK =#{chk}, APPR_DATE=SYSDATE, APPR_SIGN=#{appr_sign}
			WHERE SEQ =#{seq} AND ID = #{id}
	</update>
	
	<!-- 문서 결재시 코멘트 입력 -->
	<insert id="insertComment" parameterType="DocCommentDto">
	INSERT INTO DOC_COMMENTS
		(SEQ, COMMENT_SEQ, ID, NAME, CONTENT, REGDATE)
			VALUES(#{seq}, #{comment_seq},#{id}, #{name}, #{content}, SYSDATE)
	</insert>

	<!-- 코멘트 조회  -->
	<select id="selectComment" parameterType="java.lang.String" resultType="DocCommentDto">
	SELECT SEQ, COMMENT_SEQ, ID, NAME, CONTENT, REGDATE
		FROM DOC_COMMENTS
			WHERE SEQ = #{seq}
				ORDER BY COMMENT_SEQ
	</select>
	
	<!-- 승인시  문서함 TURN 업데이트 -->
	<update id="updateDocTurn" parameterType="ApprovalDto">
	UPDATE DOCUMENT
		SET STATE =#{state}
		<if test="appr_turn!= null AND appr_turn gte 1 AND appr_turn lte 2">
			,APPR_TURN = (SELECT MAX(APPR_TURN) FROM DOCUMENT)+1
		</if>
			WHERE SEQ =#{seq}
	</update>
	<!-- 결재해야되는 문서 리스트 조회 -->
	<select id="selectNeedApprDoc" parameterType="java.util.Map" resultType="DocumentDto">
		SELECT * FROM 
			(SELECT 
					ROW_NUMBER() OVER(ORDER BY d.seq DESC) AS ROW_NUM, d.title, d.content, d.state, d.regdate, d.author, d.seq, d.appr_turn, a.turn a_turn FROM APPROVAL a ,DOCUMENT d  
						WHERE a.ID=#{id} AND d.STATE>0 AND a.SEQ = d.SEQ AND a.TURN = d.APPR_TURN AND a.CHK = 'F'
							ORDER BY ROW_NUM ASC 
				 	)
			WHERE ROW_NUM BETWEEN #{start} AND #{last}
	</select>
	
<!-- 본인이 결재루트에 포함되어있는 결재중인 문서 -->
	<select id="selectApprMyDoc" parameterType="java.util.Map" resultType="DocumentDto">
		SELECT * FROM 			
			(SELECT 
				ROW_NUMBER() OVER(ORDER BY d.seq DESC) AS ROW_NUM, d.title, d.content, d.state, d.regdate, d.author, d.seq, d.appr_turn, id, a.turn a_turn
					FROM DOCUMENT d ,APPROVAL a 
						WHERE a.ID=#{id} AND d.STATE BETWEEN 1 AND 2 AND a.SEQ=d.SEQ AND d.APPR_TURN>a.TURN
							ORDER BY ROW_NUM ASC)
			WHERE ROW_NUM BETWEEN #{start} AND #{last}
	</select>
	
	<!-- 참조문서함  문서-->
	<select id="selectReferDoc" parameterType="java.util.Map" resultType="DocumentDto">
		SELECT * FROM 			
			(SELECT 
				ROW_NUMBER() OVER(ORDER BY d.seq DESC) AS ROW_NUM, d.title, d.content, d.state, d.regdate, d.author, d.seq, d.appr_turn, id, a.turn a_turn
					FROM DOCUMENT d ,APPROVAL a 
						WHERE ID = #{id} AND APPR_KIND = '참조' AND STATE>0
							ORDER BY ROW_NUM ASC)
				WHERE ROW_NUM BETWEEN #{start} AND #{last}
	</select>
	
	<select id="searchDoc" parameterType="java.util.Map" resultType="DocumentDto">
	SELECT TITLE, AUTHOR , CONTENT 
		FROM DOCUMENT d
			
			<trim prefix="where" prefixOverrides="OR">
				<if test="title!= null">
					TITLE LIKE '#{title}%'
				</if>
				<if test="content!=null">
					OR CONTENT LIKE '#{content}%'
				</if>
				<if test="author!=null">
					OR AUTHOR LIKE '#{author}%'
				</if>
			</trim>
	</select>
	
	<!-- 문서 양식 추가	 -->
	<insert id="insertDocType" parameterType="DocumentTypeDto">
	INSERT INTO DOCUMENT_TYPE (TYPE_SEQ , NAME, CONTENT)
		VALUES(TYPE_SEQ_SEQ.NEXTVAL, #{name}, #{content})
	</insert>
	
	<!-- 문서 양식 리스트 출력 (메뉴) -->
	<select id="selectDocTypeList" resultType="DocumentTypeDto">
		SELECT TYPE_SEQ, NAME FROM DOCUMENT_TYPE
	</select>
	
	<!-- 문서 양식 리스트 출력 (페이징) -->
	<select id="selectDocTypeListP" parameterType="RowNum" resultType="DocumentTypeDto">
		SELECT *
			FROM (SELECT ROW_NUMBER() OVER(ORDER BY TYPE_SEQ DESC) AS ROW_NUM, TYPE_SEQ, NAME FROM DOCUMENT_TYPE ORDER BY ROW_NUM ASC)
				WHERE ROW_NUM BETWEEN #{start} AND #{last}
	</select>
	
	<!-- 문서 양식 선택, 미리보기 출력 -->
	<select id="selectDocType" parameterType="java.lang.String" resultType="DocumentTypeDto">
		SELECT TYPE_SEQ, NAME, CONTENT FROM DOCUMENT_TYPE WHERE TYPE_SEQ = #{type_seq}
	</select>
	
	<!-- 문서 양식 수정 -->
	<update id="updateDocType" parameterType="DocumentTypeDto">
		UPDATE DOCUMENT_TYPE SET NAME = #{name}, CONTENT = #{content} WHERE TYPE_SEQ = #{type_seq}
	</update>
	
	<!-- 문서 양식 삭제 -->
	<delete id="deleteDocType" parameterType="java.lang.String">
		DELETE FROM DOCUMENT_TYPE WHERE TYPE_SEQ = #{type_seq}
	</delete>
	
	<!-- 문서 양식 총 개수 -->
	<select id="selectDocTypeListSize" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM DOCUMENT_TYPE
	</select>
		
	<!-- 문서 삭제 -->
	<delete id="deleteDoc" parameterType="java.lang.String">
		DELETE FROM DOCUMENT WHERE SEQ = #{seq}
	</delete>
	
	<!-- 상신문서함에 있는 문서의 총 개수 -->
	<select id="selectReportCount" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM DOCUMENT WHERE AUTHOR = #{id} AND (STATE = '1' OR STATE = '2')
	</select>
	
	<!-- 문서의 개수 (0:임시저장함/1:상신문서함-결재대기중문서/2:상신문서함-결재중문서/3:결재완료함/4:반려문서함) -->
	<select id="selectMyDocCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM DOCUMENT WHERE AUTHOR = #{id} AND STATE = #{state}
	</select>
	
	<!-- 상신문서함 리스트 출력 -->
	<select id="selectMyDocList" parameterType="java.util.Map" resultType="DocumentDto">
		SELECT * FROM 			
			(SELECT 
				ROW_NUMBER() OVER(ORDER BY SEQ DESC) AS ROW_NUM, TITLE, STATE, REGDATE, AUTHOR, SEQ, APPR_TURN
					FROM DOCUMENT
						WHERE STATE=#{state} AND AUTHOR=#{id}
							ORDER BY ROW_NUM ASC)
			WHERE ROW_NUM BETWEEN #{start} AND #{last}
	</select>
	
	<!-- 참조문서함에 있는 문서의 개수 -->
	<select id="selectReferDocCount" parameterType="ApprovalDto" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM APPROVAL WHERE ID = #{id} AND APPR_KIND = '참조'
	</select>
	
	<!-- 결재문서함-문서의 총 개수 -->
	<select id="selectApprDocCount" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM APPROVAL a ,DOCUMENT d WHERE a.ID=#{id} AND d.STATE BETWEEN 1 AND 2 AND a.SEQ = d.SEQ AND (d.APPR_TURN>a.TURN)
	</select>
	
	<!-- 결재문서함-결재해야할 문서의 개수 -->
	<select id="selectNeedApprDocCount" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) 
			FROM APPROVAL a ,DOCUMENT d 
				WHERE a.ID=#{id} AND d.STATE>0 AND a.SEQ = d.SEQ AND a.TURN = d.APPR_TURN AND a.CHK = 'F'
	</select>
	
	<!-- 문서 상신(임시보관함에서 상신하는 경우) -->
	<update id="updateSaveToAppr" parameterType="java.lang.String">
		UPDATE DOCUMENT SET APPR_TURN = '1' WHERE SEQ = #{seq}
	</update>
	
	<!-- 문서에 첨부된 파일 정보 가져오기 -->
	<select id="selectFileInfo" parameterType="java.lang.String" resultType="DocFileDto">
		SELECT * FROM DOC_FILES WHERE CATEGORY = '0' AND SEQ = #{seq}
	</select>
	
	<!-- 결재자의 서명 정보 가져오기 -->
	<select id="selectSignImg" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT SIGN_IMG FROM EMPLOYEES WHERE ID = #{id}
	</select>
	
	<!-- 문서 작성(STATE 0:임시저장/1:바로상신) -->
	<insert id="insertNewDoc" parameterType="DocumentDto">
		INSERT INTO DOCUMENT (SEQ, AUTHOR, TITLE, CONTENT, TYPE_SEQ, STATE, REGDATE, APPR_TURN)
			VALUES (DOCUMENT_SEQ.NEXTVAL, #{author}, #{title}, #{content}, #{type_seq}, #{state}, SYSDATE, '1')
	</insert>
	
	<!-- 결재자 정보 입력 -->
	<insert id="insertApprInfo" parameterType="ApprovalDto">
		INSERT INTO APPROVAL (SEQ, ID, CHK, TURN)
			VALUES (MAX(SELECT SEQ FROM DOCUMENT), #{id}, 'F', #{turn})
	</insert>
	
	<!-- 작성한 문서 SEQ 가져오기 -->
	<select id="selectNewDoc" resultType="java.lang.String">
		SELECT SEQ FROM DOCUMENT WHERE SEQ=(SELECT MAX(SEQ) FROM DOCUMENT)
	</select>
	
	<!-- 모든 문서 조회 -->
	<select id="selectAllDoc" resultType="DocumentDto">
		SELECT * FROM DOCUMENT
	</select>
	
	<!-- 작성한 문서 양식 SEQ 가져오기 -->
	<select id="selectNewDocType" resultType="java.lang.String">
		SELECT TYPE_SEQ FROM DOCUMENT_TYPE WHERE TYPE_SEQ=(SELECT MAX(TYPE_SEQ) FROM DOCUMENT_TYPE)
	</select>
	
	
	<select id="selectDocListAll" parameterType="java.lang.String" resultType="DocumentDto">
	SELECT * 
		FROM
	<!--상신함 문서 총갯수  -->
		(SELECT COUNT(*) FROM DOCUMENT WHERE AUTHOR = #{id} AND (STATE = '1' OR STATE = '2')) A1,
		<!--참조문서함  -->
		(SELECT COUNT(*) FROM APPROVAL WHERE ID = #{id} AND APPR_KIND = '참조') A2,
		<!-- 결재문서함 -->
		(SELECT COUNT(*) FROM APPROVAL a ,DOCUMENT d WHERE a.ID=#{id} AND d.STATE>0 AND a.SEQ = d.SEQ AND (d.APPR_TURN>a.TURN)) A3,
		<!-- 결재할 문서 -->
		(SELECT COUNT(*) FROM APPROVAL a ,DOCUMENT d WHERE a.ID=#{id} AND d.STATE>0 AND a.SEQ = d.SEQ AND a.TURN = d.APPR_TURN AND a.CHK = 'F') A4,
		<!-- 임시저장함 -->
		(SELECT COUNT(*) FROM DOCUMENT WHERE AUTHOR = #{id} AND STATE = 0) A5,
		<!-- 승인문서함 -->
		(SELECT COUNT(*) FROM DOCUMENT WHERE AUTHOR = #{id} AND STATE = 3) A6,
		<!-- 반려문서함 -->
		(SELECT COUNT(*) FROM DOCUMENT WHERE AUTHOR = #{id} AND STATE = 4) A7,
		<!-- 결재선에 내가 포함된 문서갯수 -->
		(SELECT COUNT(*) FROM DOCUMENT d ,APPROVAL a WHERE a.ID=#{id} AND d.STATE BETWEEN 1 AND 2 AND a.SEQ=d.SEQ AND d.APPR_TURN>a.TURN)
	</select>
	
	
	
</mapper>