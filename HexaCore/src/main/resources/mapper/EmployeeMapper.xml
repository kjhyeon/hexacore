<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hexa.core.emp">
	<insert id="insertEmployee" parameterType="empDTO">
		INSERT INTO EMPLOYEES
			(EMPLOYEE_NUMBER, ID, PASSWORD, NAME, PHONE, EMAIL, E_RANK, AUTH, BIRTH, DEPARTMENT_ID, JOIN_DATE, GENDER, POSTCODE, ADDRESS, DETAILADDRESS, STATE,PROFILE_IMG, SIGN_IMG)
				VALUES(E_NUM_SEQ.NEXTVAL, #{id}, #{password}, #{name}, #{phone}, #{email}, 16
						, 'U', #{birth}, #{department_id}, SYSDATE, #{gender}, #{postcode}, #{address}, #{detailaddress}, 0, #{profile_img}, null)

	</insert>
	
	<update id="deleteEmployee" parameterType="java.lang.Integer">
		UPDATE EMPLYEES SET STATE='-1' WHERE EMPLOYEE_NUMBER=#{num}
	</update>
	
	<update id="updateEmployee" parameterType="empDTO">
		UPDATE EMPLOYEES
			SET 
			<if test="password != null and password !=''">
					PASSWORD=#{password}, 
			</if>
			<if test="birth != null">
					BIRTH = #{birth},
			</if>
			<if test="gender != null">
					 GENDER = #{gender},
			</if>
			<if test="e_rank >0">
					E_RANK = #{e_rank},
			</if>
			<if test="department_id != 0">
					DEPARTMENT_ID = #{department_id},
			</if>
			<if test="auth != null">
					AUTH = #{auth},
			</if>
			<if test="profile_img!=null and profile_img!=''">
					 PROFILE_IMG=#{profile_img},
			</if>
			<if test="sign_img!=null and sign_img!=''">
					 SIGN_IMG=#{sign_img},
			</if>
				PHONE=#{phone}, EMAIL=#{email}, NAME = #{name},
					POSTCODE=#{postcode}, ADDRESS=#{address}, DETAILADDRESS=#{detailaddress}, STATE=#{state}
						WHERE EMPLOYEE_NUMBER=#{employee_number}
	</update>
	
	<select id="selectChildEmployeeList" parameterType="java.lang.Integer" resultType="empDTO">
		SELECT EMPLOYEE_NUMBER, ID, e.NAME, PHONE, EMAIL, E_RANK, 
			AUTH, BIRTH, e.DEPARTMENT_ID, JOIN_DATE, GENDER, POSTCODE, ADDRESS, DETAILADDRESS, e.STATE, PROFILE_IMG, SIGN_IMG, d.NAME DEPARTMENT_NAME, r.NAME E_RANK_NAME
				FROM EMPLOYEES e, DEPARTMENTS d, "RANK" r
					WHERE e.DEPARTMENT_ID=d.DEPARTMENT_ID AND e.E_RANK = r.RANK_NUM AND e.DEPARTMENT_ID = #{department_id} AND e.STATE != '-1'
	</select>
	
	<select id="selectEmployeeList"  parameterType="RowNum" resultType="empDTO">
		SELECT * FROM 
			(SELECT 
				ROW_NUMBER() OVER(ORDER BY EMPLOYEE_NUMBER DESC) AS ROW_NUM, EMPLOYEE_NUMBER ,ID, e.NAME, d.NAME DEPARTMENT_NAME ,AUTH, e.STATE,r.NAME E_RANK_NAME, TO_CHAR(JOIN_DATE,'YYYY-MM-DD') JOIN_DATE FROM EMPLOYEES e, "RANK" r,DEPARTMENTS d 
					WHERE e.E_RANK=r.RANK_NUM AND e.DEPARTMENT_ID=d.DEPARTMENT_ID ORDER BY ROW_NUM ASC 
				)
					WHERE ROW_NUM BETWEEN #{start} AND #{last}
<!-- 			SELECT EMPLOYEE_NUMBER, ID, e.NAME, PHONE, EMAIL, E_RANK,  -->
<!-- 			AUTH, TO_CHAR(BIRTH,'yyyy-MM-dd') BIRTH, e.DEPARTMENT_ID, TO_CHAR(JOIN_DATE,'yyyy-MM-dd') JOIN_DATE, GENDER, POSTCODE, ADDRESS, DETAILADDRESS, e.STATE, PROFILE_IMG, SIGN_IMG, d.NAME DEPARTMENT_NAME, r.NAME E_RANK_NAME -->
<!-- 				FROM EMPLOYEES e, DEPARTMENTS d, "RANK" r -->
<!-- 					WHERE e.DEPARTMENT_ID=d.DEPARTMENT_ID AND e.E_RANK = r.RANK_NUM -->
	</select>
	
	<select id="selectEmployeeListSize"  resultType="java.lang.Integer">
			SELECT COUNT(*)
				FROM EMPLOYEES e, DEPARTMENTS d, "RANK" r
					WHERE e.DEPARTMENT_ID=d.DEPARTMENT_ID AND e.E_RANK = r.RANK_NUM
	</select>
	
	<select id="selectEmployee" parameterType="java.lang.String" resultType="empDTO">
			SELECT EMPLOYEE_NUMBER, ID, PASSWORD, e.NAME, PHONE, EMAIL, E_RANK, 
			AUTH, TO_CHAR(BIRTH,'yyyy-MM-dd') BIRTH, e.DEPARTMENT_ID, TO_CHAR(JOIN_DATE,'yyyy-MM-dd')JOIN_DATE , GENDER, POSTCODE, ADDRESS, DETAILADDRESS, e.STATE, PROFILE_IMG, SIGN_IMG, d.NAME DEPARTMENT_NAME, r.NAME E_RANK_NAME
				FROM EMPLOYEES e, DEPARTMENTS d, "RANK" r
					WHERE e.DEPARTMENT_ID=d.DEPARTMENT_ID AND e.E_RANK = r.RANK_NUM AND ID = #{id}
	</select>
	
	<select id="selectEmpPw" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT PASSWORD
				FROM EMPLOYEES
					WHERE ID = #{id}
	</select>
	
	<select id="selectEmpId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT ID
				FROM EMPLOYEES
					WHERE ID = #{id}
	</select>
	
	<select id="selectLoginInfo" parameterType="java.lang.String" resultType="empDTO">
		SELECT ID, PASSWORD,e.NAME, EMAIL, E_RANK, 
			AUTH, e.DEPARTMENT_ID, e.STATE, PROFILE_IMG, d.NAME DEPARTMENT_NAME, r.NAME E_RANK_NAME
				FROM EMPLOYEES e, DEPARTMENTS d, "RANK" r
					WHERE e.DEPARTMENT_ID=d.DEPARTMENT_ID AND e.E_RANK = r.RANK_NUM AND ID=#{id} AND e.STATE != '-1'
	</select>
	
	<update id="moveEmployee" parameterType="java.lang.Integer">
		UPDATE EMPLOYEES
               SET  DEPARTMENT_ID=0
                   WHERE DEPARTMENT_ID=#{department_id}
	</update>
	
	<select id="selectRank" resultType="empDTO">
		SELECT RANK_NUM AS E_RANK, NAME AS E_RANK_NAME FROM RANK
	</select>
</mapper>
